#ping sweeps 
import subprocess
import platform
import re
from concurrent.futures import ThreadPoolExecutor

# Determine the ping command based on the OS
def ping_command(ip):
    if platform.system().lower() == "windows":
        return ["ping", "-n", "1", "-w", "500", ip]
    else:
        return ["ping", "-c", "1", "-W", "1", ip]

# Function to perform a ping and check the output
def ping_ip(ip):
    command = ping_command(ip)
    result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode == 0:
        print(f"{ip} is reachable")
    else:
        print(f"{ip} is not reachable")

# Generate a list of IP addresses in the specified subnet
def generate_ips(subnet):
    ip_pattern = re.compile(r"(\d+)\.(\d+)\.(\d+)\.(\d+)")
    match = ip_pattern.match(subnet)
    if not match:
        raise ValueError("Invalid subnet format. Example format: '192.168.1.x'")
    
    base_ip = f"{match.group(1)}.{match.group(2)}.{match.group(3)}"
    return [f"{base_ip}.{i}" for i in range(1, 255)]

# Main function to perform the ping sweep
def ping_sweep(subnet):
    ips = generate_ips(subnet)
    with ThreadPoolExecutor(max_workers=100) as executor:
        executor.map(ping_ip, ips)

# Example usage
subnet = "192.168.1.x"  # Replace with your subnet
ping_sweep(subnet)
